package week2

object rationals {

  val x = new Rational(1, 3)                      //> x  : week2.Rational = 1/3
  val y = new Rational(5, 7)                      //> y  : week2.Rational = 5/7
  val z = new Rational(3, 2)                      //> z  : week2.Rational = 3/2
  
  x.numer                                         //> res0: Int = 1
  x.denom                                         //> res1: Int = 3
  y.add(y)                                        //> res2: week2.Rational = 10/7
  x.sub(y).sub(z)                                 //> res3: week2.Rational = -79/42
  x.less(y)                                       //> res4: Boolean = true
  x.max(y)                                        //> res5: week2.Rational = 5/7
  
  val strange = new Rational(1, 0)                //> java.lang.IllegalArgumentException: requirement failed: denominator must be 
                                                  //| nonzero
                                                  //| 	at scala.Predef$.require(Predef.scala:224)
                                                  //| 	at week2.Rational.<init>(week2.rationals.scala:22)
                                                  //| 	at week2.rationals$$anonfun$main$1.apply$mcV$sp(week2.rationals.scala:16
                                                  //| )
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$$anonfun$$exe
                                                  //| cute$1.apply$mcV$sp(WorksheetSupport.scala:76)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.redirected(W
                                                  //| orksheetSupport.scala:65)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.$execute(Wor
                                                  //| ksheetSupport.scala:75)
                                                  //| 	at week2.rationals$.main(week2.rationals.scala:3)
                                                  //| 	at week2.rationals.main(week2.rationals.scala)
  strange.add(strange)
}

class Rational(x: Int, y: Int) {

  require(y != 0, "denominator must be nonzero")
  
  private def gcd(a: Int, b: Int): Int = if (b == 0) a else gcd(b, a % b)
  private val g = gcd(x, y)
  
  def numer = x / g
  def denom = y / g
  
  def add(that: Rational) =
    new Rational(
      numer * that.denom + that.numer * denom, denom * that.denom)
      
  def neg: Rational = new Rational(-this.numer, this.denom)
  
  def sub(that: Rational) = add(that.neg)
  
  def less(that: Rational) = this.numer * that.denom < that.numer * this.denom
  
  def max(that: Rational) = if (this.less(that)) that else this
  
      
  override def toString = numer + "/" + denom
  
}